import os
import logging
import aiohttp
from aiogram import Bot, Dispatcher, executor, types
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("TELEGRAM_TOKEN")
BACKEND_URL = os.getenv("BACKEND_URL")

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

# ---- Start ----
@dp.message_handler(commands=["start"])
async def start_cmd(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø AI-Book –±–æ—Ç.\n\n"
                         "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                         "/recommend ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n"
                         "/quiz ‚Äî –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞")

# ---- Quiz ----
@dp.message_handler(commands=["quiz"])
async def quiz_cmd(message: types.Message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("–í–æ–ø—Ä–æ—Å 1", "–í–æ–ø—Ä–æ—Å 2")
    await message.answer("üìñ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –≤—ã–±–µ—Ä–∏ –≤–æ–ø—Ä–æ—Å:", reply_markup=kb)

@dp.message_handler(lambda m: m.text.startswith("–í–æ–ø—Ä–æ—Å"))
async def quiz_questions(message: types.Message):
    if "1" in message.text:
        await message.answer("‚ùì –í–æ–ø—Ä–æ—Å 1: –ö–∞–∫–∞—è —Ç–≤–æ—è –ª—é–±–∏–º–∞—è –∫–Ω–∏–≥–∞?")
    elif "2" in message.text:
        await message.answer("‚ùì –í–æ–ø—Ä–æ—Å 2: –°–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥ —Ç—ã —á–∏—Ç–∞–µ—à—å –≤ –≥–æ–¥?")

# ---- Recommend ----
async def get_recommendations(user_id: int, favorites: list[str]):
    async with aiohttp.ClientSession() as session:
        async with session.post(f"{BACKEND_URL}/v1/users/{user_id}/recommendations",
                                json={"favorites": favorites}) as resp:
            if resp.status == 200:
                return await resp.json()
            return {"error": f"Backend error {resp.status}"}

@dp.message_handler(commands=["recommend"])
async def recommend_cmd(message: types.Message):
    user_id = message.from_user.id
    recs = await get_recommendations(user_id, ["–ú–∞–ª–µ–Ω—å–∫–∏–π –ø—Ä–∏–Ω—Ü", "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä"])
    if "recommendations" in recs:
        await message.answer("üìö –í–æ—Ç —á—Ç–æ —è —Å–æ–≤–µ—Ç—É—é:\n" + recs["recommendations"])
    else:
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
