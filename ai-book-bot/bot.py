import logging
from aiogram import Bot, Dispatcher, executor, types
import aiohttp
import os

API_TOKEN = os.getenv("TELEGRAM_TOKEN")
BACKEND_URL = os.getenv("BACKEND_URL", "http://127.0.0.1:8000")  # –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ —É–∫–∞–∂–∏ http://<ip>:8000

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# —Å—Ç–∞—Ä—Ç
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "–ö–ª–∞—Å—Å–∏–∫–∞", "–ß—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ")
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üëã –í—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä:", reply_markup=keyboard)

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∂–∞–Ω—Ä–æ–≤
@dp.message_handler(lambda message: message.text in ["–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "–ö–ª–∞—Å—Å–∏–∫–∞", "–ß—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ"])
async def handle_genre(message: types.Message):
    prefs = [message.text.lower()]

    async with aiohttp.ClientSession() as session:
        async with session.post(
            f"{BACKEND_URL}/v1/users/{message.from_user.id}/recommendations",
            json={"favorites": prefs}
        ) as resp:
            if resp.status != 200:
                return await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")

            data = await resp.json()

    # –ë–µ–∫–µ–Ω–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç recommendations (—Å—Ç—Ä–æ–∫–∞ –æ—Ç LLM)
    recs = data.get("recommendations", "ü§î –ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
    await message.answer(f"üìö –í–æ—Ç, —á—Ç–æ —è –Ω–∞—à—ë–ª:\n\n{recs}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
